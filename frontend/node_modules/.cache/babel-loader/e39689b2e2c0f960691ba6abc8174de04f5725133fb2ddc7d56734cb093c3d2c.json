{"ast":null,"code":"var _jsxFileName = \"/Users/chanceonyiorah/Documents/Spring2023/Visual Interfaces/Final Project/frontend/src/components/Filter.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { HStack, Tag, TagLabel, TagCloseButton } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Filter(props) {\n  _s();\n  const [typesList, setTypesList] = useState([]);\n  const [colorsList, setColorsList] = useState([]);\n\n  // handles the filter parameters\n  const addType = type => {\n    // if type is already in list, remove type from list\n    if (typesList.includes(type)) {\n      let index = -1;\n      for (let i = 0; i < typesList.length; i++) {\n        if (typesList[i] == type) index = i;\n      }\n      delete typesList[index];\n    }\n    // else add type to list\n    else {\n      typesList.push(type);\n    }\n\n    // turn types list into string with items separated by a comma\n    props.setTypes(typesList.toString());\n    console.log(props.types);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      children: ['Dress', 'Jacket', 'Top', 'Pants', 'Shorts', 'Skirt', 'Sweater', 'Shoe'].map(type => /*#__PURE__*/_jsxDEV(Tag, {\n        size: \"lg\",\n        borderRadius: \"full\",\n        variant: \"subtle\",\n        colorScheme: \"red\",\n        onClick: () => addType(type),\n        children: [/*#__PURE__*/_jsxDEV(TagLabel, {\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TagCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Filter, \"JxsrOkWCHfKx0Qtso8H6VyYBWvQ=\");\n_c = Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["useState","HStack","Tag","TagLabel","TagCloseButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Filter","props","_s","typesList","setTypesList","colorsList","setColorsList","addType","type","includes","index","i","length","push","setTypes","toString","console","log","types","children","spacing","map","size","borderRadius","variant","colorScheme","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chanceonyiorah/Documents/Spring2023/Visual Interfaces/Final Project/frontend/src/components/Filter.tsx"],"sourcesContent":["import { useState } from 'react'\nimport {\n    HStack,\n    Tag,\n    TagLabel,\n    TagCloseButton,\n    Box\n} from '@chakra-ui/react'\n\nexport default function Filter(props: any) {\n    const [typesList, setTypesList] = useState<string[]>([])\n    const [colorsList, setColorsList] = useState<string[]>([])\n\n    // handles the filter parameters\n    const addType = (type: string) => {\n        // if type is already in list, remove type from list\n        if (typesList.includes(type))\n        {\n            let index = -1\n            for (let i = 0; i < typesList.length; i++)\n            {\n                if (typesList[i] == type)\n                    index = i\n            }\n\n            delete typesList[index]\n        }\n        // else add type to list\n        else \n        {\n            typesList.push(type)\n        }\n\n        // turn types list into string with items separated by a comma\n        props.setTypes(typesList.toString())\n\n        console.log(props.types)\n    }\n\n    return (\n        <>\n            <HStack spacing={4}>\n            {['Dress', 'Jacket', 'Top', 'Pants', 'Shorts', 'Skirt', 'Sweater', 'Shoe'].map((type) => (\n                <Tag\n                size='lg'\n                key={type}\n                borderRadius='full'\n                variant='subtle'\n                colorScheme='red'\n                onClick={() => addType(type)}\n                >\n                    <TagLabel>{type}</TagLabel>\n                    <TagCloseButton />\n                </Tag>\n            ))}\n            </HStack>\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACIC,MAAM,EACNC,GAAG,EACHC,QAAQ,EACRC,cAAc,QAEX,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,eAAe,SAASC,MAAMA,CAACC,KAAU,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAW,EAAE,CAAC;EACxD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAW,EAAE,CAAC;;EAE1D;EACA,MAAMgB,OAAO,GAAIC,IAAY,IAAK;IAC9B;IACA,IAAIL,SAAS,CAACM,QAAQ,CAACD,IAAI,CAAC,EAC5B;MACI,IAAIE,KAAK,GAAG,CAAC,CAAC;MACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,SAAS,CAACS,MAAM,EAAED,CAAC,EAAE,EACzC;QACI,IAAIR,SAAS,CAACQ,CAAC,CAAC,IAAIH,IAAI,EACpBE,KAAK,GAAGC,CAAC;MACjB;MAEA,OAAOR,SAAS,CAACO,KAAK,CAAC;IAC3B;IACA;IAAA,KAEA;MACIP,SAAS,CAACU,IAAI,CAACL,IAAI,CAAC;IACxB;;IAEA;IACAP,KAAK,CAACa,QAAQ,CAACX,SAAS,CAACY,QAAQ,EAAE,CAAC;IAEpCC,OAAO,CAACC,GAAG,CAAChB,KAAK,CAACiB,KAAK,CAAC;EAC5B,CAAC;EAED,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACItB,OAAA,CAACL,MAAM;MAAC4B,OAAO,EAAE,CAAE;MAAAD,QAAA,EAClB,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAACE,GAAG,CAAEb,IAAI,iBAChFX,OAAA,CAACJ,GAAG;QACJ6B,IAAI,EAAC,IAAI;QAETC,YAAY,EAAC,MAAM;QACnBC,OAAO,EAAC,QAAQ;QAChBC,WAAW,EAAC,KAAK;QACjBC,OAAO,EAAEA,CAAA,KAAMnB,OAAO,CAACC,IAAI,CAAE;QAAAW,QAAA,gBAEzBtB,OAAA,CAACH,QAAQ;UAAAyB,QAAA,EAAEX;QAAI;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,eAC3BjC,OAAA,CAACF,cAAc;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA,GAPjBtB,IAAI;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QASZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACO,iBACV;AAEX;AAAC5B,EAAA,CAjDuBF,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}