{"ast":null,"code":"var _jsxFileName = \"/Users/chanceonyiorah/Documents/Spring2023/Visual Interfaces/Final Project/frontend/src/components/ClothingModal.tsx\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, Image, Grid, GridItem } from '@chakra-ui/react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClothingModal(props) {\n  var _props$clothing, _props$clothing2, _props$clothing3, _props$clothing4, _props$clothing5;\n  const getDefaultColors = colors => {\n    let colorArray = colors === null || colors === void 0 ? void 0 : colors.split(\",\");\n    let defaultColors = [];\n    for (let i = 0; i < (colorArray === null || colorArray === void 0 ? void 0 : colorArray.length); i++) {\n      defaultColors.push({\n        value: colorArray[i],\n        label: colorArray[i]\n      });\n    }\n    return defaultColors;\n  };\n\n  //console.log(props.isOpen)\n  const typeOptions = [{\n    value: 'Dress',\n    label: 'Dress'\n  }, {\n    value: 'Jacket',\n    label: 'Jacket'\n  }, {\n    value: 'Pants',\n    label: 'Pants'\n  }, {\n    value: 'Shorts',\n    label: 'Shorts'\n  }, {\n    value: 'Pants',\n    label: 'Pants'\n  }, {\n    value: 'Shoes',\n    label: 'Shoes'\n  }, {\n    value: 'Skirt',\n    label: 'Skirt'\n  }, {\n    value: 'Sweater',\n    label: 'Sweater'\n  }];\n  const colorOptions = [{\n    value: 'red',\n    label: 'red'\n  }, {\n    value: 'orange',\n    label: 'orange'\n  }, {\n    value: 'yellow',\n    label: 'yellow'\n  }, {\n    value: 'green',\n    label: 'green'\n  }, {\n    value: 'blue',\n    label: 'blue'\n  }, {\n    value: 'purple',\n    label: 'purple'\n  }, {\n    value: 'pink',\n    label: 'pink'\n  }, {\n    value: 'black',\n    label: 'black'\n  }, {\n    value: 'brown',\n    label: 'brown'\n  }, {\n    value: 'gray',\n    label: 'gray'\n  }, {\n    value: 'white',\n    label: 'white'\n  }];\n  const updateClothing = values => {\n    console.log(values);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: props.isOpen,\n      onClose: props.onClose,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          m: 6,\n          children: \"Update Clothing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            h: \"100%\",\n            templateColumns: \"repeat(9, 1fr)\",\n            gap: 4,\n            ml: 6,\n            mr: 6,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              rowSpan: 10,\n              bg: \"transparent\",\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: \"/\" + ((_props$clothing = props.clothing) === null || _props$clothing === void 0 ? void 0 : _props$clothing.image),\n                alt: \"Clothing \" + ((_props$clothing2 = props.clothing) === null || _props$clothing2 === void 0 ? void 0 : _props$clothing2.id),\n                borderRadius: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 2,\n              bg: \"transparent\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              bg: \"transparent\",\n              mb: 8,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: typeOptions,\n                defaultValue: {\n                  value: (_props$clothing3 = props.clothing) === null || _props$clothing3 === void 0 ? void 0 : _props$clothing3.type,\n                  label: (_props$clothing4 = props.clothing) === null || _props$clothing4 === void 0 ? void 0 : _props$clothing4.type\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 2,\n              bg: \"transparent\",\n              children: \"Color(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              bg: \"transparent\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: colorOptions,\n                defaultValue: getDefaultColors((_props$clothing5 = props.clothing) === null || _props$clothing5 === void 0 ? void 0 : _props$clothing5.colors),\n                isMulti: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            bg: \"red.400\",\n            color: \"white\",\n            mr: 6,\n            mb: 6,\n            size: \"lg\",\n            onClick: props.onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            bg: \"red.100\",\n            color: \"white\",\n            mr: 6,\n            mb: 6,\n            size: \"lg\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = ClothingModal;\nvar _c;\n$RefreshReg$(_c, \"ClothingModal\");","map":{"version":3,"names":["Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","Image","Grid","GridItem","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","ClothingModal","props","_props$clothing","_props$clothing2","_props$clothing3","_props$clothing4","_props$clothing5","getDefaultColors","colors","colorArray","split","defaultColors","i","length","push","value","label","typeOptions","colorOptions","updateClothing","values","console","log","children","isOpen","onClose","size","fileName","_jsxFileName","lineNumber","columnNumber","m","h","templateColumns","gap","ml","mr","colSpan","rowSpan","bg","src","clothing","image","alt","id","borderRadius","mb","options","defaultValue","type","isMulti","color","onClick","_c","$RefreshReg$"],"sources":["/Users/chanceonyiorah/Documents/Spring2023/Visual Interfaces/Final Project/frontend/src/components/ClothingModal.tsx"],"sourcesContent":["import {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Button,\n    Image,\n    Grid,\n    GridItem,\n    FormControl,\n    Spacer,\n    Flex\n  } from '@chakra-ui/react'\n  import Select from 'react-select'\n  import { Formik, Form, Field } from 'formik';\n\n  export default function ClothingModal(props: any) {\n    const getDefaultColors = (colors: string) => {\n      let colorArray = colors?.split(\",\")\n      let defaultColors = []\n      for (let i = 0; i < colorArray?.length; i++)\n      {\n        defaultColors.push({value: colorArray[i], label: colorArray[i]} ,)\n      }\n\n      return defaultColors\n    }\n\n    //console.log(props.isOpen)\n    const typeOptions = [\n      { value: 'Dress', label: 'Dress' },\n      { value: 'Jacket', label: 'Jacket' },\n      { value: 'Pants', label: 'Pants' },\n      { value: 'Shorts', label: 'Shorts' },\n      { value: 'Pants', label: 'Pants' },\n      { value: 'Shoes', label: 'Shoes' },\n      { value: 'Skirt', label: 'Skirt' },\n      { value: 'Sweater', label: 'Sweater' },\n    ];\n\n    const colorOptions = [\n      { value: 'red', label: 'red' },\n      { value: 'orange', label: 'orange' },\n      { value: 'yellow', label: 'yellow' },\n      { value: 'green', label: 'green' },\n      { value: 'blue', label: 'blue' },\n      { value: 'purple', label: 'purple' },\n      { value: 'pink', label: 'pink' },\n      { value: 'black', label: 'black' },\n      { value: 'brown', label: 'brown' },\n      { value: 'gray', label: 'gray' },\n      { value: 'white', label: 'white' },\n    ];\n\n    const updateClothing = (values: any) =>\n    {\n        console.log(values)\n    }\n\n    return (\n      <>\n        <Modal isOpen={props.isOpen} onClose={props.onClose} size=\"lg\">\n          <ModalOverlay />\n            <ModalContent>\n                <ModalHeader m={6}>Update Clothing</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <Grid\n                      h='100%'\n                      templateColumns='repeat(9, 1fr)'\n                      gap={4}\n                      ml={6}\n                      mr={6}\n                    >\n                      <GridItem colSpan={3} rowSpan={10} bg='transparent'>\n                        <Image\n                          src={\"/\" + props.clothing?.image}\n                          alt={\"Clothing \" + props.clothing?.id}\n                          borderRadius='lg'\n                        />\n                      </GridItem>\n                      <GridItem colSpan={2} bg='transparent'>\n                        Type\n                      </GridItem>\n                      <GridItem colSpan={3} bg='transparent' mb={8}>\n                          <Select options={typeOptions} defaultValue={{value: props.clothing?.type, label: props.clothing?.type}} />\n                      </GridItem>\n                      <GridItem colSpan={2} bg='transparent'>\n                        Color(s)\n                      </GridItem>\n                      <GridItem colSpan={3} bg='transparent'>\n                          <Select options={colorOptions} defaultValue={getDefaultColors(props.clothing?.colors)} isMulti={true}/>\n                      </GridItem>\n                    </Grid>\n                </ModalBody>\n                <ModalFooter>\n                  <Button bg='red.400' color='white' mr={6} mb={6} size='lg' onClick={props.onClose}>\n                    Close\n                  </Button>\n                  <Button bg='red.100' color='white' mr={6} mb={6} size='lg' type='submit'>Update</Button>\n                </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </>\n    )\n  }"],"mappings":";AAAA,SACIA,KAAK,EACLC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,SAAS,EACTC,gBAAgB,EAChBC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,QAAQ,QAIH,kBAAkB;AACzB,OAAOC,MAAM,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,eAAe,SAASC,aAAaA,CAACC,KAAU,EAAE;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EAChD,MAAMC,gBAAgB,GAAIC,MAAc,IAAK;IAC3C,IAAIC,UAAU,GAAGD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,KAAK,CAAC,GAAG,CAAC;IACnC,IAAIC,aAAa,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAGH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEI,MAAM,GAAED,CAAC,EAAE,EAC3C;MACED,aAAa,CAACG,IAAI,CAAC;QAACC,KAAK,EAAEN,UAAU,CAACG,CAAC,CAAC;QAAEI,KAAK,EAAEP,UAAU,CAACG,CAAC;MAAC,CAAC,CAAG;IACpE;IAEA,OAAOD,aAAa;EACtB,CAAC;;EAED;EACA,MAAMM,WAAW,GAAG,CAClB;IAAEF,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,CACvC;EAED,MAAME,YAAY,GAAG,CACnB;IAAEH,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,CACnC;EAED,MAAMG,cAAc,GAAIC,MAAW,IACnC;IACIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACvB,CAAC;EAED,oBACEvB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACE1B,OAAA,CAACb,KAAK;MAACwC,MAAM,EAAEvB,KAAK,CAACuB,MAAO;MAACC,OAAO,EAAExB,KAAK,CAACwB,OAAQ;MAACC,IAAI,EAAC,IAAI;MAAAH,QAAA,gBAC5D1B,OAAA,CAACZ,YAAY;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACdjC,OAAA,CAACX,YAAY;QAAAqC,QAAA,gBACT1B,OAAA,CAACV,WAAW;UAAC4C,CAAC,EAAE,CAAE;UAAAR,QAAA,EAAC;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAc,eAChDjC,OAAA,CAACP,gBAAgB;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACpBjC,OAAA,CAACR,SAAS;UAAAkC,QAAA,eACN1B,OAAA,CAACJ,IAAI;YACHuC,CAAC,EAAC,MAAM;YACRC,eAAe,EAAC,gBAAgB;YAChCC,GAAG,EAAE,CAAE;YACPC,EAAE,EAAE,CAAE;YACNC,EAAE,EAAE,CAAE;YAAAb,QAAA,gBAEN1B,OAAA,CAACH,QAAQ;cAAC2C,OAAO,EAAE,CAAE;cAACC,OAAO,EAAE,EAAG;cAACC,EAAE,EAAC,aAAa;cAAAhB,QAAA,eACjD1B,OAAA,CAACL,KAAK;gBACJgD,GAAG,EAAE,GAAG,KAAAtC,eAAA,GAAGD,KAAK,CAACwC,QAAQ,cAAAvC,eAAA,uBAAdA,eAAA,CAAgBwC,KAAK,CAAC;gBACjCC,GAAG,EAAE,WAAW,KAAAxC,gBAAA,GAAGF,KAAK,CAACwC,QAAQ,cAAAtC,gBAAA,uBAAdA,gBAAA,CAAgByC,EAAE,CAAC;gBACtCC,YAAY,EAAC;cAAI;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACjB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACO,eACXjC,OAAA,CAACH,QAAQ;cAAC2C,OAAO,EAAE,CAAE;cAACE,EAAE,EAAC,aAAa;cAAAhB,QAAA,EAAC;YAEvC;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAW,eACXjC,OAAA,CAACH,QAAQ;cAAC2C,OAAO,EAAE,CAAE;cAACE,EAAE,EAAC,aAAa;cAACO,EAAE,EAAE,CAAE;cAAAvB,QAAA,eACzC1B,OAAA,CAACF,MAAM;gBAACoD,OAAO,EAAE9B,WAAY;gBAAC+B,YAAY,EAAE;kBAACjC,KAAK,GAAAX,gBAAA,GAAEH,KAAK,CAACwC,QAAQ,cAAArC,gBAAA,uBAAdA,gBAAA,CAAgB6C,IAAI;kBAAEjC,KAAK,GAAAX,gBAAA,GAAEJ,KAAK,CAACwC,QAAQ,cAAApC,gBAAA,uBAAdA,gBAAA,CAAgB4C;gBAAI;cAAE;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACnG,eACXjC,OAAA,CAACH,QAAQ;cAAC2C,OAAO,EAAE,CAAE;cAACE,EAAE,EAAC,aAAa;cAAAhB,QAAA,EAAC;YAEvC;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAW,eACXjC,OAAA,CAACH,QAAQ;cAAC2C,OAAO,EAAE,CAAE;cAACE,EAAE,EAAC,aAAa;cAAAhB,QAAA,eAClC1B,OAAA,CAACF,MAAM;gBAACoD,OAAO,EAAE7B,YAAa;gBAAC8B,YAAY,EAAEzC,gBAAgB,EAAAD,gBAAA,GAACL,KAAK,CAACwC,QAAQ,cAAAnC,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM,CAAE;gBAAC0C,OAAO,EAAE;cAAK;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAChG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACC,eACZjC,OAAA,CAACT,WAAW;UAAAmC,QAAA,gBACV1B,OAAA,CAACN,MAAM;YAACgD,EAAE,EAAC,SAAS;YAACY,KAAK,EAAC,OAAO;YAACf,EAAE,EAAE,CAAE;YAACU,EAAE,EAAE,CAAE;YAACpB,IAAI,EAAC,IAAI;YAAC0B,OAAO,EAAEnD,KAAK,CAACwB,OAAQ;YAAAF,QAAA,EAAC;UAEnF;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACTjC,OAAA,CAACN,MAAM;YAACgD,EAAE,EAAC,SAAS;YAACY,KAAK,EAAC,OAAO;YAACf,EAAE,EAAE,CAAE;YAACU,EAAE,EAAE,CAAE;YAACpB,IAAI,EAAC,IAAI;YAACuB,IAAI,EAAC,QAAQ;YAAA1B,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACT,iBACP;AAEP;AAACuB,EAAA,GAzFuBrD,aAAa;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}