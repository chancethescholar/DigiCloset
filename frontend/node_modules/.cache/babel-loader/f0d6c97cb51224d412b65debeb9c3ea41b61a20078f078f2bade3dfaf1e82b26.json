{"ast":null,"code":"var _jsxFileName = \"/Users/chanceonyiorah/Documents/Spring2023/Visual Interfaces/Final Project/frontend/src/components/TemperatureContainer.tsx\",\n  _s = $RefreshSig$();\nimport { Grid, GridItem, Card, CardBody, Text } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TemperatureContainer() {\n  _s();\n  const [temperature, setTemperature] = useState(null);\n  const [city, setCity] = useState(null);\n  const [state, setState] = useState(null);\n  useEffect(() => {\n    async function getTemperatureLocation() {\n      const tempResponse = await fetch(`http://127.0.0.1:8000/api/ootd/weather`);\n      const tempJson = await tempResponse.json();\n      setTemperature(tempJson.temperature);\n      const response = await fetch(`http://127.0.0.1:8000/api/ootd/location`);\n      const locationJson = await response.json();\n      setCity(locationJson.city);\n      setState(locationJson.state);\n    }\n    getTemperatureLocation();\n  }, [temperature, city, state]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"100%\",\n      m: 6,\n      bg: \"gray.100\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          h: \"100%\",\n          templateColumns: \"repeat(5, 1fr)\",\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 2,\n            ml: 6,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"6xl\",\n              children: [temperature, \"\\xBA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: [city, \", \", state]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(TemperatureContainer, \"z/5wY4wFfslQa5r4ysWZx6e1448=\");\n_c = TemperatureContainer;\nvar _c;\n$RefreshReg$(_c, \"TemperatureContainer\");","map":{"version":3,"names":["Grid","GridItem","Card","CardBody","Text","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TemperatureContainer","_s","temperature","setTemperature","city","setCity","state","setState","getTemperatureLocation","tempResponse","fetch","tempJson","json","response","locationJson","children","maxW","m","bg","h","templateColumns","colSpan","ml","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chanceonyiorah/Documents/Spring2023/Visual Interfaces/Final Project/frontend/src/components/TemperatureContainer.tsx"],"sourcesContent":["import { \n    Grid,\n    GridItem,\n    Card,\n    CardBody,\n    Text\n } from \"@chakra-ui/react\"\n import { useEffect, useState } from \"react\"\n\nexport default function TemperatureContainer() {\n    const [temperature, setTemperature] = useState<null | string>(null)\n    const [city, setCity] = useState<null | string>(null)\n    const [state, setState] = useState<null | string>(null)\n\n    useEffect(() => {\n        async function getTemperatureLocation() {\n          const tempResponse = await fetch(\n            `http://127.0.0.1:8000/api/ootd/weather`\n          )\n      \n          const tempJson = await tempResponse.json()\n          setTemperature(tempJson.temperature)\n\n          const response = await fetch(\n            `http://127.0.0.1:8000/api/ootd/location`\n          )\n      \n          const locationJson = await response.json()\n          setCity(locationJson.city)\n          setState(locationJson.state)\n        }\n        getTemperatureLocation()\n      }, [temperature, city, state])\n    return (\n        <>\n            <Card maxW=\"100%\" m={6} bg=\"gray.100\">\n                <CardBody>\n                    <Grid \n                        h=\"100%\"\n                        templateColumns='repeat(5, 1fr)'\n                    >\n                        <GridItem colSpan={2} ml={6}>\n                          <Text fontSize='6xl'>{temperature}ยบ</Text>\n                        </GridItem>\n                        <GridItem colSpan={3}>{city}, {state}</GridItem>\n                    </Grid>\n                </CardBody>\n            </Card>\n        </>\n    )\n}\n"],"mappings":";;AAAA,SACIA,IAAI,EACJC,QAAQ,EACRC,IAAI,EACJC,QAAQ,EACRC,IAAI,QACA,kBAAkB;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC3C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EACnE,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EACrD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,eAAec,sBAAsBA,CAAA,EAAG;MACtC,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAC7B,wCAAuC,CACzC;MAED,MAAMC,QAAQ,GAAG,MAAMF,YAAY,CAACG,IAAI,EAAE;MAC1CT,cAAc,CAACQ,QAAQ,CAACT,WAAW,CAAC;MAEpC,MAAMW,QAAQ,GAAG,MAAMH,KAAK,CACzB,yCAAwC,CAC1C;MAED,MAAMI,YAAY,GAAG,MAAMD,QAAQ,CAACD,IAAI,EAAE;MAC1CP,OAAO,CAACS,YAAY,CAACV,IAAI,CAAC;MAC1BG,QAAQ,CAACO,YAAY,CAACR,KAAK,CAAC;IAC9B;IACAE,sBAAsB,EAAE;EAC1B,CAAC,EAAE,CAACN,WAAW,EAAEE,IAAI,EAAEE,KAAK,CAAC,CAAC;EAChC,oBACIT,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACIlB,OAAA,CAACN,IAAI;MAACyB,IAAI,EAAC,MAAM;MAACC,CAAC,EAAE,CAAE;MAACC,EAAE,EAAC,UAAU;MAAAH,QAAA,eACjClB,OAAA,CAACL,QAAQ;QAAAuB,QAAA,eACLlB,OAAA,CAACR,IAAI;UACD8B,CAAC,EAAC,MAAM;UACRC,eAAe,EAAC,gBAAgB;UAAAL,QAAA,gBAEhClB,OAAA,CAACP,QAAQ;YAAC+B,OAAO,EAAE,CAAE;YAACC,EAAE,EAAE,CAAE;YAAAP,QAAA,eAC1BlB,OAAA,CAACJ,IAAI;cAAC8B,QAAQ,EAAC,KAAK;cAAAR,QAAA,GAAEb,WAAW,EAAC,MAAC;YAAA;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAO;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACjC,eACX9B,OAAA,CAACP,QAAQ;YAAC+B,OAAO,EAAE,CAAE;YAAAN,QAAA,GAAEX,IAAI,EAAC,IAAE,EAACE,KAAK;UAAA;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAY;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC7C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACR,iBACR;AAEX;AAAC1B,EAAA,CAzCuBD,oBAAoB;AAAA4B,EAAA,GAApB5B,oBAAoB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}